define({ "api": [  {    "type": "post",    "url": "/polls/v1/answer",    "title": "Answer poll",    "version": "0.1.0",    "name": "Answer",    "group": "Poll",    "parameter": {      "examples": [        {          "title": "Request-Example:",          "content": "{\n     \"pollId\": \"11\",\n     \"userId\": \"4\",\n     \"questionList\": [\n             {\n                 \"questionId\": \"4\",\n                 \"optionId\": \"8\"\n             },\n             {\n                 \"questionId\": \"5\",\n                 \"optionId\": \"11\"\n             }\n        ]\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "filename": "services/polls/v1/answer.js",    "groupTitle": "Poll",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "PollNotFound",            "description": "<p>The requested poll was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/polls/v1/pollList",    "title": "Show polls for Audience",    "version": "0.1.0",    "name": "CreatePollList",    "group": "Poll",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "id",            "description": "<p>Audience User Id.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "limit",            "description": "<p>Limit for number of polls.</p> "          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n      \"userId\": \"4\",\n      \"limit\": \"15\"\n }",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[\n{\n\"id\": 12,\n\"start_date\": \"2015-10-23T05:22:22.000Z\",\n\"poll_id\": 4,\n\"is_skipped\": 0,\n\"is_boost\": 0,\n\"end_date\": \"2015-10-23T05:22:22.000Z\",\n\"user_id\": 9,\n\"poll_type_id\": 3,\n\"created_user_id\": 9,\n\"poll_name\": \"Cinema\",\n\"is_answered\": \"0\",\n\"is_active\": 1,\n\"isGeneric\": 1,\n\"reward_type_id\": 1,\n\"visibility_type_id\": 1,\n\"poll_answered_time\": null\n},\n{\n\"id\": 15,\n\"start_date\": \"2015-10-23T05:30:04.000Z\",\n\"poll_id\": 5,\n\"is_skipped\": 0,\n\"is_boost\": 0,\n\"end_date\": \"2015-10-23T05:30:04.000Z\",\n\"user_id\": 9,\n\"poll_type_id\": 2,\n\"created_user_id\": 6,\n\"poll_name\": \"Composer\",\n\"is_answered\": \"0\",\n\"is_active\": 1,\n\"isGeneric\": 1,\n\"reward_type_id\": 1,\n\"visibility_type_id\": 1,\n\"poll_answered_time\": null\n}\n]",          "type": "json"        }      ]    },    "filename": "services/polls/v1/pollList.js",    "groupTitle": "Poll",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The requested user was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/polls/v1/poll",    "title": "Create poll",    "version": "0.1.0",    "name": "Create_Poll",    "group": "Poll",    "parameter": {      "examples": [        {          "title": "Request-Example:",          "content": "{\n\"pollName\": \"Best Footballer\",\n\"isBoost\": \"0\"\n\"visibilityType\": \"visible\",\n\"rewardType\": \"free\",\n\"category\": \"sports\",\n\"isGeneric\": \"0\",\n\"createdUserId\": \"1\",\n\"pollType\": \"opinion\",\n\"questionList\": [\n     {\n         \"question\": \"Who is the best striker?\",\n         \"questionType\": \"text\",\n         \"choices\": [\n             \"Messi\",\n             \"Ronaldo\",\n             \"Suarez\"\n             ]\n      },\n      {\n         \"question\": \"Who is the top goal scorer?\",\n         \"questionType\": \"text\",\n         \"choices\": [\n             \"Messi\",\n             \"Ronaldo\",\n             \"Suarez\"\n             ]\n       }\n  ],\n  \"audience\": [\n  \"9994012253\",\n  \"9944377754\",\n  \"9443797732\"\n  ]\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "filename": "services/polls/v1/poll.js",    "groupTitle": "Poll",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/polls/v1/poll/:id",    "title": "Delete poll",    "version": "0.1.0",    "name": "Delete_Poll",    "group": "Poll",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "id",            "description": "<p>Poll Id.</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "filename": "services/polls/v1/poll.js",    "groupTitle": "Poll",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "PollNotFound",            "description": "<p>The requested poll was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  },  {    "type": "show",    "url": "/polls/v1/result/:id",    "title": "Show poll results",    "version": "0.1.0",    "name": "Poll_Result",    "group": "Poll",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "id",            "description": "<p>Poll Id.</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n \"pollName\": \"Composer\",\n \"questionList\": [\n     {\n         \"choices\": [\n             {\n                 \"resultCount\": 3,\n                 \"choice\": \"JS Bach\"\n             }\n         ],\n         \"questionType\": \"text\",\n         \"question\": \"Who is the composer of the baroque period\"\n     },\n     {\n         \"choices\": [\n             {\n                 \"resultCount\": 3,\n                 \"choice\": \"Beethovan\"\n             }\n         ],\n         \"questionType\": \"text\",\n         \"question\": \"Who's is the symphony piece 'FurElise'?\"\n     }\n ],\n \"createdUserId\": 6,\n \"category\": \"music\"\n}",          "type": "json"        }      ]    },    "filename": "services/polls/v1/result.js",    "groupTitle": "Poll",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "PollNotFound",            "description": "<p>The requested poll was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/polls/v1/pollList/:id",    "title": "Show polls for Created User",    "version": "0.1.0",    "name": "ShowPollList",    "group": "Poll",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>Created User Id.</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": " HTTP/1.1 200 OK\n [\n  {\n      \"visibility_type_id\": 1,\n      \"created_user_id\": 6,\n      \"poll_type_id\": 2,\n      \"id\": 1,\n      \"poll_name\": \"Best Footballer\",\n      \"start_date\": \"2015-10-23T04:39:20.000Z\",\n      \"reward_type_id\": 1,\n      \"is_boost\": 0,\n      \"is_active\": 1,\n      \"end_date\": \"2015-10-23T04:39:20.000Z\"\n  },\n  {\n      \"visibility_type_id\": 1,\n      \"created_user_id\": 6,\n      \"poll_type_id\": 2,\n      \"id\": 5,\n      \"poll_name\": \"Composer\",\n      \"start_date\": \"2015-10-23T05:30:04.000Z\",\n      \"reward_type_id\": 1,\n      \"is_boost\": 0,\n      \"is_active\": 1,\n      \"isGeneric\": 1,\n      \"end_date\": \"2015-10-23T05:30:04.000Z\"\n  },\n  {\n      \"visibility_type_id\": 1,\n      \"created_user_id\": 6,\n      \"poll_type_id\": 2,\n      \"id\": 6,\n      \"poll_name\": \"Composer\",\n      \"start_date\": \"2015-10-23T05:30:09.000Z\",\n      \"reward_type_id\": 1,\n      \"is_boost\": 0,\n      \"is_active\": 1,\n      \"isGeneric\": 1,\n      \"end_date\": \"2015-10-23T05:30:09.000Z\"\n  }\n]",          "type": "json"        }      ]    },    "filename": "services/polls/v1/pollList.js",    "groupTitle": "Poll",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The requested user was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/polls/v1/poll/:id",    "title": "Show poll",    "version": "0.1.0",    "name": "Show_Poll",    "group": "Poll",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "id",            "description": "<p>Poll Id.</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\"category\": \"Sports\",\n\"createdUser\": \"Kennet Paul\",\n\"visibilityType\": \"visible\",\n\"isBoost\": 0,\n\"pollType\": \"opinion\",\n\"rewardType\": \"free\",\n\"questionList\": [\n{\n\"questionType\": \"text\",\n\"questionId\": 9,\n\"question\": \"Who is the best striker?\",\n\"choices\": [\n{\n\"optionId\": 22,\n\"choice\": \"Messi\"\n},\n{\n\"optionId\": 23,\n\"choice\": \"Ronaldo\"\n},\n{\n\"optionId\": 24,\n\"choice\": \"Suarez\"\n}\n]\n},\n{\n\"questionType\": \"text\",\n\"questionId\": 9,\n\"question\": \"Who is the top goal scorer?\",\n\"choices\": [\n{\n\"optionId\": 25,\n\"choice\": \"Messi\"\n},\n{\n\"optionId\": 26,\n\"choice\": \"Ronaldo\"\n},\n{\n\"optionId\": 27,\n\"choice\": \"Suarez\"\n}\n]\n}\n],\n\"pollName\": \"Best Footballer\",\n\"createdUserId\": 2",          "type": "json"        }      ]    },    "filename": "services/polls/v1/poll.js",    "groupTitle": "Poll",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "PollNotFound",            "description": "<p>The requested poll was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/survey/v1/survey",    "title": "Create Survey",    "version": "0.1.0",    "name": "Survey",    "group": "Survey",    "parameter": {      "examples": [        {          "title": "Request-Example:",          "content": "{\n     \"pollId\": \"11\",\n     \"fname\": \"steve\",\n     \"lname\": \"jobs\",\n     \"phone\": \"9878987678\"\n     \"questionList\": [\n             {\n                 \"question\": \"Who is the best cricketer?\",\n                 \"option\": \"Sachin\"\n             },\n             {\n                 \"question\": \"Who is the best footballer?\",\n                 \"option\": \"Messi\"\n             }\n        ]\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "filename": "services/survey/v1/survey.js",    "groupTitle": "Survey",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "PollNotFound",            "description": "<p>The requested poll was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/users/v1/user",    "title": "Create User/Login",    "version": "0.1.0",    "name": "CreateUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "country",            "description": "<p>User's country name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "city",            "description": "<p>User's city name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "phone",            "description": "<p>User's phone number.</p> "          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n      \"country\": \"India\",\n      \"city\": \"Chennai\",\n      \"phone\": \"9991234567\"\n }",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n      \"secretKey\": \"2b73926b3cf4f6554eb5f2eadc38be95e3b1e883b7e16d3f80fbe6b5732501007575f90ea947d988a6c63bab8216ca2dd2fcc2a0e7b604a8f8a76c3856f4fdf2\",\n      \"publicKey\": \"5ba30d56a51dea3c77bba7bddc39885d6a01879d18dbb6eb4df406d6988d8d55\",\n      \"userId\": \"67\"\n}",          "type": "json"        }      ]    },    "filename": "services/users/v1/user.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "users/v1/user/:id",    "title": "Delete User",    "version": "0.1.0",    "name": "DeleteUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>User's unique ID.</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "filename": "services/users/v1/user.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The requested user was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "users/v1/user/:id",    "title": "Show User",    "version": "0.1.0",    "name": "ShowUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>User's unique ID.</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n    \"access_time\": \"2015-10-12T18:44:48.000Z\",\n    \"dob\": null,\n    \"country\": \"India\",\n    \"country_code\": 91,\n    \"city\": \"Chennai\",\n    \"last_name\": \"Doe\",\n    \"is_verified\": 1,\n    \"secret_key\": \"35126696ab4cd2eb09ec0f65c42aa6d8fb404033175244da209e89551e4890b38c43bb5941ece6fa7ce7bc835a0e68d696b4be0346fabefccb3a4f92c90c3170\",\n    \"id\": 3,\n    \"gender\": \"male\",\n    \"email\": \"johndoe@gmail.com\",\n    \"phone\": \"9991234567\",\n    \"auth_code\": \"6425\",\n    \"auth_type_id\": 1,\n    \"created_time\": \"2015-10-12T18:44:48.000Z\",\n    \"role_id\": 1,\n    \"password\": null,\n    \"updated_time\": \"2015-10-12T19:51:41.000Z\",\n    \"first_name\": \"John\",\n    \"public_key\": \"144150e9404af9bb6b3fb7a480e2c122bd0af209235c6a673b7a33a62d58f293\"\n  }",          "type": "json"        }      ]    },    "filename": "services/users/v1/user.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The requested user was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "users/v1/user/:id",    "title": "Update User",    "version": "0.1.0",    "name": "UpdateUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>User's unique ID.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "fname",            "description": "<p>User's first name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "lname",            "description": "<p>User's last name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>User's email.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "phone",            "description": "<p>User's phone number.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "country",            "description": "<p>User's country name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "city",            "description": "<p>User's city name.</p> "          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n    \"fname\": \"John\",\n    \"lname\": \"Doe\",\n    \"email\": \"johndoe@gmail.com\",\n    \"phone\": \"9991234567\",\n    \"country\": \"India\",\n    \"city\":\"Chennai\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n    \"access_time\": \"2015-10-12T18:44:48.000Z\",\n    \"dob\": null,\n    \"country\": \"India\",\n    \"country_code\": 91,\n    \"city\": \"Chennai\",\n    \"last_name\": \"Doe\",\n    \"is_verified\": 1,\n    \"secret_key\": \"35126696ab4cd2eb09ec0f65c42aa6d8fb404033175244da209e89551e4890b38c43bb5941ece6fa7ce7bc835a0e68d696b4be0346fabefccb3a4f92c90c3170\",\n    \"id\": 3,\n    \"gender\": \"male\",\n    \"email\": \"johndoe@gmail.com\",\n    \"phone\": \"9991234567\",\n    \"auth_code\": \"6425\",\n    \"auth_type_id\": 1,\n    \"created_time\": \"2015-10-12T18:44:48.000Z\",\n    \"role_id\": 1,\n    \"password\": null,\n    \"updated_time\": \"2015-10-12T19:51:41.000Z\",\n    \"first_name\": \"John\",\n    \"public_key\": \"144150e9404af9bb6b3fb7a480e2c122bd0af209235c6a673b7a33a62d58f293\"\n  }",          "type": "json"        }      ]    },    "filename": "services/users/v1/user.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The requested user was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "users/v1/verification/:id",    "title": "Verify User",    "version": "0.1.0",    "name": "UserVerification",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>User's unique ID.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "authCode",            "description": "<p>Authentication code sent to mobile.</p> "          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n    \"authCode\": \"6425\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "filename": "services/users/v1/verification.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "DatabaseError",            "description": "<p>Database could not be reached.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The requested user was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 500 Internal Server Error\n{\n  \"error\": \"Requested Action Failed. Database could not be reached.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    }  }] });